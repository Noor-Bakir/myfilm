// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("FilmDarg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmLang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FilmStar1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FilmStar2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilmTrans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filmtime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilmStar1Id");

                    b.HasIndex("FilmStar2Id");

                    b.ToTable("Film");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c43d0db0-63ec-4ec4-9b7a-1a20c48d9a71"),
                            FilmDarg = "****",
                            FilmName = "Jungle"
                        });
                });

            modelBuilder.Entity("Core.Entities.FilmStar1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Film")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starimage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FilmStar1");
                });

            modelBuilder.Entity("Core.Entities.FilmStar2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Film")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starimage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FilmStar2");
                });

            modelBuilder.Entity("Core.Entities.Film", b =>
                {
                    b.HasOne("Core.Entities.FilmStar1", "FilmStar1")
                        .WithMany()
                        .HasForeignKey("FilmStar1Id");

                    b.HasOne("Core.Entities.FilmStar2", "FilmStar2")
                        .WithMany()
                        .HasForeignKey("FilmStar2Id");
                });
#pragma warning restore 612, 618
        }
    }
}
